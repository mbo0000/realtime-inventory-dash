services:

  postgres:
    image: debezium/postgres:15
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql # init db
      - ./postgres/pgdata:/var/lib/postgresql/data # bind mount to map if needing to persist data folder
      - ./postgres/seed/products.csv:/docker-entrypoint-initdb.d/products.csv # seed data

  zookeeper:
    image: docker.io/bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9093:9093"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://:9092,OUTSIDE://:9093
      - KAFKA_CFG_LISTENERS=INSIDE://:9092,OUTSIDE://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INSIDE
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  datagen:
    build:
      context: ./datagen/
      dockerfile: ./Dockerfile
    command: python /opt/datagen/sale_transaction.py
    volumes:
      - ./datagen:/opt/datagen
    container_name: datagen
    restart: on-failure
    depends_on:
      - kafka
      - postgres
      
  streamlit:
    build:
      context: ./streamlit_dash/
      dockerfile: ./Dockerfile
    ports:
      - "8501:8501"
    command: streamlit run local.py
    volumes:
      - ./streamlit_dash:/opt/streamlit_dash
    container_name: streamlit_dash
    restart: on-failure
    depends_on:
      - postgres

  jobmanager:
    container_name: flink_jobmanager
    build:
      context: ./flink/
    ports:
      - "8081:8081"
      - "9249:9249"
    command: jobmanager
    volumes:
      - ./flink/code:/opt/flink/code
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager 

  taskmanager:
    container_name: flink_taskmanager
    build:
      context: ./flink/
    depends_on:
      - jobmanager
    command: taskmanager
    ports:
      - "9250:9249"
    volumes:
      - ./flink/code:/opt/flink/code
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2        